T 1389310958 18<cbreak>	o-O-o: there are multiple forms.
T 1389310963 18<o-O-o>	lol
T 1389310966 18<ville>	o-O-o: http://www.youtube.com/watch?v=GF1PMGpwpqk
T 1389310977 18<io2>	"The Unicode Standard provides default algorithms for determining grapheme cluster boundaries, with two variants: legacy grapheme clusters and extended grapheme clusters. The most appropriate variant depends on the language and operation involved. However, the extended grapheme cluster boundaries are recommended for general processing, while the legacy grapheme cluster boundaries are maintained primarily for backwards compatibility with earlier versions
T 1389310978 18<io2>	of this specification."
T 1389310984 18<o-O-o>	and I assume some of these codepoint numbers will tell the string interpreter how to combine them?
T 1389310989 18<o-O-o>	is one of them as a glue?
T 1389311004 18<o-O-o>	ville: I will watch it
T 1389311005 18<io2>	grapheme clusters stand for unicode clusterfuck
T 1389311024 18<o-O-o>	ok, so no more random access, unless some assumptions are satisfied
T 1389311025 18<o-O-o>	wheeeeeeeeeeeeee
T 1389311036 18<o-O-o>	fuck you all ! I will stay on UCS2
T 1389311062 18<o-O-o>	65535 chars are enough for me :)
T 1389311065 18<io2>	thankfully IPA is kind of easy to create an algorithm for, since the graphemes used are very precise in their rules
T 1389311073 18<kalven>	what do you need random access for anyway?
T 1389311098 23*	23ac_slater has quit (23Quit: WeeChat 0.4.223)
T 1389311115 18<o-O-o>	kalven: linebreaking?
T 1389311121 18<cbreak>	o-O-o: it gets worse if you think about actually using them
T 1389311121 18<o-O-o>	layout management?
T 1389311122 18<cbreak>	some characters have different sizes than others when visualized
T 1389311128 18<o-O-o>	cbreak: monospaced font?
T 1389311147 18<o-O-o>	processing a huge string by many threads?
T 1389311148 18<cbreak>	o-O-o: that's a latin concept
T 1389311155 18<o-O-o>	latin concept? pff
T 1389311157 18<o-O-o>	don't bs me, please
T 1389311164 18<cbreak>	like upper/lower case
T 1389311179 18<o-O-o>	now we can't have monospaced fonts? :D
T 1389311191 18<cbreak>	you can.
T 1389311202 18<cbreak>	but I doubt all glyphs will fit into it fine
T 1389311217 18<o-O-o>	assumptions
T 1389311222 23*	23spobat has quit (23Ping timeout: 264 seconds23)
T 1389311235 18<kalven>	o-O-o: unless you're doing really trivial shit, you need to run over the characters to linebreak
T 1389311240 18<o-O-o>	sure
T 1389311253 18<o-O-o>	if the assumptions fail, no random access and no lots of fun/fast things
T 1389311258 18<io2>	 cbreak: http://en.wikipedia.org/wiki/Dz_%28digraph%29
T 1389311270 18<io2>	that one was the first one i hated
T 1389311271 18<cbreak>	consider characters like this: â€®it does not even appear in the output, but turns everything around after it.
T 1389311306 19*	19nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-98.Princeton.EDU) has joined ##c++
T 1389311346 18<plash>	o-O-o: plebian. UCS-2 is deprecated by UTF-16
T 1389311353 18<o-O-o>	sweet. now unicode is a hypertext language
T 1389311364 18<o-O-o>	plash: UTF-16 won't guarantee random access
T 1389311365 18<BlueProtoman>	Unlucky identifier choices aside, does C++11 break and C++03 code/remove any features?
T 1389311375 23*	23develCuy (23~quassel@185.38.44.47) has left ##c++ (23"http://quassel-irc.org - Chat comfortably. Anywhere."23)
T 1389311384 18<cbreak>	neither will ucs-2
T 1389311391 18<o-O-o>	cbreak: why not? :)
T 1389311393 18<o-O-o>	:)))))))))))))))
T 1389311402 23*	23paul424 has quit (23Ping timeout: 264 seconds23)
T 1389311405 18<cbreak>	does it not also have combining characters?
T 1389311410 18<o-O-o>	nope
T 1389311429 18<cbreak>	BlueProtoman: yes.
T 1389311430 18<io2>	later all, need to sleep :)
T 1389311433 18<cbreak>	BlueProtoman: some things got a bit stricter
T 1389311433 18<plash>	grapheme composition (wordage?) in Unicode != hypertext in the way that HTML is hypertext
T 1389311440 18<BlueProtoman>	cbreak: Ah, OK.
T 1389311450 19*	19LanceJZ (~LanceJZ@50-54-212-107.evrt.wa.frontiernet.net) has joined ##c++
T 1389311455 18<cbreak>	like {} initialization no longer being implicitly narrowing
T 1389311463 18<io2>	graphemes are all about being unicode clusterfucked
T 1389311465 18<det>	You can probably still get logarithmic access with unicode + special structure
T 1389311469 23*	23io2 has quit (2323)
T 1389311488 18<plash>	and I don't know what your definition is, but hypertext = "Digital text in which the reader may navigate related information through embedded hyperlinks."
T 1389311495 18<cbreak>	â€«â€®det: well, how do you deal with
T 1389311518 18<plash>	LTR <-> RTL rendering isn't even close to that
T 1389311520 18<det>	cbreak, probably still doable
T 1389311523 18<cbreak>	you'd have to go backwards after encountering it
T 1389311529 18<det>	some kind of counted tree + metadata
T 1389311531 18<cbreak>	det: if you want spatial random access
T 1389311534 18<ruediger>	o-O-o: ucs-2 level 2 and 3 have combining chars
T 1389311537 18<det>	not random
T 1389311538 18<det>	lag
T 1389311539 18<o-O-o>	plash: if that allows combining and inverting... links will appear for sure
T 1389311540 18<det>	log*
T 1389311544 18<o-O-o>	ruediger: but not level 1
T 1389311545 18<plash>	...
T 1389311556 18<cbreak>	det: you still have to look at every codepoint to find such rtl things
T 1389311567 18<plash>	you can use whatever you damn want to "define" a link, sure, but that doesn't mean Unicode *defines* that itself
T 1389311570 18<det>	cbreak, you can record it in tree as added
T 1389311578 18<plash>	it is not a hypertext language. HTML is a hypertext language because it defines that
T 1389311584 18<cbreak>	det: ah, so you accept linear time preprocessing
T 1389311592 18<det>	cbreak, thats a given already
T 1389311598 18<det>	cbreak, even if reading from file
T 1389311601 18<plash>	as soon as you're parsing Unicode for shit like hyperlinks, you're adding a layer of syntax and diction
T 1389311626 18<plash>	with your logic, HTML is a text encoding
T 1389311646 18<cbreak>	HTML has a text encoding.
T 1389311655 18<cbreak>	(Stolen from XML, the XML entities)
T 1389311672 18<cbreak>	... well, I guess it's not really one.
T 1389311672 18<det>	cbreak, btw, my name isnt actually ted :p
T 1389311673 18<plash>	yes, I am sure we are all aware, thanks for that comment
T 1389311684 19*	19Targen (~iguana@190.73.205.133) has joined ##c++
T 1389311709 19*	19LBV_User (~leonardo@179.187.27.35.dynamic.adsl.gvt.net.br) has joined ##c++
T 1389311720 18<cbreak>	det: strangely enough, my IRC Client's user name recognition code recognized it
T 1389311740 18<cbreak>	evidently it works on code points, not on visually ordered glyphs or what ever :)
T 1389311783 18<det>	cbreak, now that you mention it, mine did too :)
T 1389311784 18<det>	xchat ?
T 1389311785 23*	23bollullera (23~lubuntu@89.7.24.109) has left ##c++
T 1389311785 23*	23felipealmeida has quit (23Quit: ERC Version 5.3 (IRC client for Emacs)23)
T 1389311793 18<cbreak>	Textual.
T 1389311808 18<det>	You mean your irc client is in a terminal ?
T 1389311822 18<cbreak>	no
T 1389311827 18<cbreak>	it's the name of the client
T 1389311829 18<det>	ahh ok
T 1389311832 18<cbreak>	it's a GUI client for OS X
T 1389311852 18<det>	oh, right you are the Mac Os X guy
T 1389311858 18<det>	I need to try that OS some day
T 1389311861 18<cbreak>	I am not the only one! I think...
T 1389311882 18<det>	Linux is failing pretty bad on my high dpi notebook
T 1389311898 18<cbreak>	did you see the new screens they presented at CES?
T 1389311904 19*	19xyzodiac (~xyzodiac@ip70-171-22-24.ga.at.cox.net) has joined ##c++
T 1389311916 18<det>	For MacOs X ?
T 1389311946 18<cbreak>	not only
T 1389311957 18<det>	well, reguardless, the answer is no :)
T 1389311964 18<cbreak>	http://www.macrumors.com/2014/01/07/affordable-4k-displays/
T 1389311980 18<cbreak>	"..3840x2160 resolution. The monitor should be available in April for $800."
T 1389312002 18<det>	pfft, hate 4k marketing term
T 1389312016 18<cbreak>	it's also used in the movie industry
T 1389312022 18<cbreak>	has at least 3 different meanings :)
T 1389312042 18<det>	1920x1080 = 1080p
T 1389312062 18<det>	but 4k is the width ...
T 1389312066 18<cbreak>	there are other 1080p modes too
T 1389312075 18<cbreak>	4:3 1080p
T 1389312099 18<det>	it pretends to be 4x 1080p, but really ~2x
T 1389312104 18<cbreak>	ah well. Resolution names are a pile of inconsistencies anyway
T 1389312108 18<det>	unless im misunderstanding
T 1389312119 18<kalven>	the dell 4"k" will go for $699
T 1389312134 18<cbreak>	det: there are some 4k modes that are actually 4k pixel wide
T 1389312167 18<Chris>	Those cheap crappy non-IPS 30Hz refresh screens.
T 1389312198 18*	hz invoked appears
T 1389312203 18<hz>	doh!
T 1389312266 18<cbreak>	only 30 hz? pittyfull :(
T 1389312683 18<det>	cbreak, i respect 4k in that case :)
T 1389312687 18<ville>	!focus
T 1389312688 18<nolyc>	##c++ focuses on C++. Discuss offtopic things elsewhere; ##c++-general or ##c++-social
T 1389312715 23*	23comand has quit (23Quit: Bye23)
T 1389312806 23*	23pajasso has quit (23Ping timeout: 264 seconds23)
T 1389312940 23*	23Schalla has quit (23Quit: Nettalk6 - www.ntalk.de23)
T 1389313007 23*	23LBV_User (23~leonardo@179.187.27.35.dynamic.adsl.gvt.net.br) has left ##c++ (23"Konversation terminated!"23)
T 1389313014 19*	19LBV_User (~leonardo@179.187.27.35.dynamic.adsl.gvt.net.br) has joined ##c++
T 1389313026 23*	23genuine has quit (23Remote host closed the connection23)
T 1389313089 23*	23SoCo_cpp_ has quit (23Ping timeout: 240 seconds23)
T 1389313211 19*	19robbyoconnor (~wakawaka@guifications/user/r0bby) has joined ##c++
T 1389313331 19*	19spobat (~spobat@unaffiliated/spobat) has joined ##c++
T 1389313333 19*	19pajasso (~pajasso@8.22.9.108) has joined ##c++
T 1389313382 23*	23Bloodust has quit (23Ping timeout: 264 seconds23)
T 1389313527 23*	23wondiws has quit (23Quit: Leaving23)
T 1389313557 19*	19rnickb (~rnickb@ip-64-134-65-89.public.wayport.net) has joined ##c++
T 1389313563 18<rnickb>	 when I write using T = int(int); -- what's the type of T?
T 1389313581 19*	19alamar (alamar@oops.kernel.de) has joined ##c++
T 1389313618 18<o-O-o>	rnickb: compiler error
T 1389313618 18<o-O-o>	:)
T 1389313620 19*	19Bloodust (~Bloodust@tinodidriksen.com) has joined ##c++
T 1389313631 18<rnickb>	o-O-o: it works for c++11
T 1389313635 18<o-O-o>	ok
T 1389313637 18<o-O-o>	using
T 1389313642 18<o-O-o>	T is a function pointer
T 1389313656 18<rnickb>	no it's not the same as T=int(*)(int)
T 1389313665 18<o-O-o>	but you can use like it
T 1389313670 23*	23spobat has quit (23Ping timeout: 264 seconds23)
T 1389313674 18<o-O-o>	it is the same as typedef int T(int);
T 1389313676 18<rnickb>	no, not equivalent
T 1389313701 18<o-O-o>	C function type
T 1389313704 18<rnickb>	T f = myfunc won't work with T=int(int), but it will with T=int(*)(int)
T 1389313723 18<o-O-o>	T * f = myfunc :)
T 1389313731 18<rnickb>	yes, that works
T 1389313731 19*	19dozn (~root@24-207-52-240.eastlink.ca) has joined ##c++
T 1389313734 18<o-O-o>	!next
T 1389313735 18<nolyc>	Another satisfied customer, next!
T 1389313746 18<rnickb>	but, why what's the different between function type and function pointer type
T 1389313757 18<o-O-o>	the pointer
T 1389313769 19*	19JamesWine (~James@cpe-174-102-108-244.woh.res.rr.com) has joined ##c++
T 1389313785 18<rnickb>	how would you use a function-type but not function-pointer type
T 1389313793 18<o-O-o>	you may want to use a reference
T 1389313798 18<o-O-o>	T & f = myfunc :)
T 1389313834 23*	23dozn has quit (23Quit: WeeChat 0.4.223)
T 1389313864 19*	19salamanderrake (~salamande@2605:a000:e881:1300:62a4:4cff:fe60:13ef) has joined ##c++
T 1389313887 18<Taggnostr2>	geordi: { cout << !!5; }
T 1389313888 18<geordi>	true
T 1389313917 18<o-O-o>	geordi, replace !!5 with bool(5)
T 1389313918 18<geordi>	true
T 1389313932 19*	19Rudolf (~rodolfo@unaffiliated/rudolf) has joined ##c++
T 1389313939 18<Taggnostr2>	if I have a function that returns true/false, should I declare it as bool func()?
T 1389313948 18<o-O-o>	yesSs
T 1389313963 18<jesyspa>	<< (true/false)
T 1389313964 18<geordi>	warning: division by zero
T 1389313968 18<o-O-o>	what else would it be?
T 1389313970 18<jesyspa>	You should probably fix that.
T 1389313977 18<det>	Taggnostr2, troll ?
T 1389313996 18<plash>	det: he means true or false
T 1389313998 18<o-O-o>	jesyspa: it is a false division. diagnostic is correct :D
T 1389314003 18<det>	plash, oh ok :p
T 1389314008 18<plash>	Taggnostr2: yes
T 1389314014 18<jesyspa>	o-O-o: I mean, Taggnostr2 should probably fix his function. :P
T 1389314029 23*	23pajasso has quit (23Remote host closed the connection23)
T 1389314032 18<Taggnostr2>	in C I used to return 0/1 and declare it as int func()
T 1389314054 18<plash>	Taggnostr2: stop using the division symbol unless you mean it
T 1389314068 18<plash>	Taggnostr2: C++ has a dedicated boolean type, definitely use it
T 1389314074 18<Taggnostr2>	and I was doing the same in C++ too, but I guess that I can use bool here
T 1389314083 18<Taggnostr2>	plash, ok
T 1389314088 19*	19pajasso (~pajasso@173.252.71.189) has joined ##c++
T 1389314158 23*	23zhost has quit (23Ping timeout: 246 seconds23)
T 1389314204 23*	23kaffeetrauma has quit (23Quit: kaffeetrauma23)
T 1389314228 19*	19Raziel (~Raziel@78.97.98.119) has joined ##c++
T 1389314246 18<rfree>	!geordi
T 1389314246 18<rfree>	!nolyc
T 1389314247 18<nolyc>	geordi is a bot (http://eel.is/geordi/) that compiles and executes c++ code. Snippets not related to the ongoing discussion are to be tested in #geordi (or /msg geordi <code>) NOT in ##c++.
T 1389314248 18<nolyc>	nolyc is cylon spelled backwards. I'm a supybot.
T 1389314249 18<plash>	Taggnostr2: always use the type that fits the (mathematical) domain. since you only have two possible values -- true or false -- bool is the proper type to use
T 1389314268 23*	23jesyspa has quit (23Quit: leaving23)
T 1389314308 18<Taggnostr2>	plash, yes, I'm fixing my code, thanks for the info
T 1389314333 18<Taggnostr2>	also bool(value) is better than !!value, right?
T 1389314363 18<o-O-o>	!supybot
T 1389314363 23*	23pajasso has quit (23Read error: Connection reset by peer23)
T 1389314363 18<nolyc>	supybot is well-documented, but it has too many plugins.
T 1389314374 18<o-O-o>	so what this is supposed to mean?
T 1389314383 19*	19pajasso (~pajasso@8.22.9.108) has joined ##c++
T 1389314422 18<o-O-o>	Description Nested commands, easy configuration, and an incredibly flexible and easy-to-use plugin system distinguish Supybot from other IRC bots. There simply isn't a more flexible or easier to use IRC bot!
T 1389314427 23*	23geri has quit (23Ping timeout: 272 seconds23)
T 1389314435 18<o-O-o>	wow such bot much flexible
T 1389314486 23*	23nikki93 has quit (23Remote host closed the connection23)
T 1389314562 23*	23Zarthus has quit (23Remote host closed the connection23)
T 1389314632 23*	23kurko_ has quit (23Read error: No route to host23)
T 1389314636 19*	19rfk (~fgk@dynamic-oit-pu-dormnet-bb-d-7.Princeton.EDU) has joined ##c++
T 1389314655 19*	19kurko_ (~textual@189-74-204-228.paebv700.dsl.brasiltelecom.net.br) has joined ##c++
T 1389314923 23*	23LBV_User has quit (23Quit: Konversation terminated!23)
T 1389314943 19*	19dark_splinter (~dark_spli@a95-92-16-88.cpe.netcabo.pt) has joined ##c++
T 1389314993 18<rfk>	{ string str("Test"); str[0] = 'a'; << str }
T 1389314994 18<geordi>	error: expected primary-expression before '<<' token
T 1389314999 18<rfk>	{ string str("Test"); str[0] = 'a'; cout << str }
T 1389315000 18<geordi>	error: expected ';' before '}' token
T 1389315016 18<rfk>	ok, i'll stop :x just verifying that i can assign to a string in this way?
T 1389315054 18<rfk>	okay, tried it on ideone
T 1389315060 18<rfk>	:P
T 1389315187 19*	19w3pm (~w3pm@rrcs-24-43-59-146.west.biz.rr.com) has joined ##c++
T 1389315202 18<rfk>	are there standard utilities to convert between byte array and hex, or should i roll my own? SO seems to suggest the latter, just checking
T 1389315223 18<rfk>	specifically from hex string to byte array, which is slightly more difficult i guess? sscanf?
T 1389315336 18<Stryyker>	sounds like something the streams can do
T 1389315431 23*	23xyzodiac has quit (23Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦23)
T 1389315498 23*	23melba has quit (23Ping timeout: 265 seconds23)
T 1389315541 23*	23riotz has quit (23Remote host closed the connection23)
T 1389315551 19*	19nikki93 (~nikki93@nat-oitwireless-outside-vapornet3-c-98.Princeton.EDU) has joined ##c++
T 1389315601 23*	23fisted has quit (23Remote host closed the connection23)
T 1389315637 19*	19riotz (riotz@gateway/shell/sh3lls.net/x-egehnlhoruvrepak) has joined ##c++
T 1389315637 19*	19fisted (~fisted@unaffiliated/fisted) has joined ##c++
T 1389315666 23*	23kurko_ has quit (23Ping timeout: 252 seconds23)
T 1389315714 23*	23rnickb has quit (23Quit: rnickb23)
T 1389315833 19*	19asandweech (~whichsand@64.126.34.156) has joined ##c++
T 1389315843 23*	23asandweech (23~whichsand@64.126.34.156) has left ##c++ (23"can't take it no more"23)
T 1389315918 23*	23pajasso has quit (23Remote host closed the connection23)
T 1389315969 18<rfk>	ah, i see, the imbue method
T 1389316099 23*	23Nemus_ (23~Nemus@unaffiliated/nemus) has left ##c++
T 1389316107 23*	23robbyoconnor has quit (23Ping timeout: 265 seconds23)
T 1389316160 23*	23hyperair has quit (23Ping timeout: 252 seconds23)
T 1389316170 19*	19oeao (~bob@BeaverNet-166.caltech.edu) has joined ##c++
T 1389316193 19*	19tmh_ (~e@unaffiliated/tmh/x-0013998) has joined ##c++
T 1389316304 19*	19kurko_ (~textual@189-74-204-228.paebv700.dsl.brasiltelecom.net.br) has joined ##c++
T 1389316322 23*	23unreal has quit (23Ping timeout: 272 seconds23)
T 1389316370 23*	23x_root has quit (23Ping timeout: 264 seconds23)
T 1389316527 23*	23juliohm has quit (23Quit: Leaving23)
T 1389316912 23*	23Kakera has quit (23Ping timeout: 260 seconds23)
T 1389316919 19*	19Stanley00 (~Stanley00@unaffiliated/stanley00) has joined ##c++
T 1389317076 19*	19pajasso (~pajasso@172.56.38.83) has joined ##c++
T 1389317087 19*	19spobat (~spobat@unaffiliated/spobat) has joined ##c++
T 1389317094 23*	23jack_rabbit has quit (23Quit: Leaving23)
T 1389317117 19*	19jack_rabbit (~jack_rabb@c-50-148-124-212.hsd1.il.comcast.net) has joined ##c++
T 1389317133 19*	19unreal (~unreal@unaffiliated/unreal) has joined ##c++
T 1389317204 23*	23turtlehat has quit (2323)
T 1389317231 19*	19xyzodiac (~xyzodiac@ip70-171-22-24.ga.at.cox.net) has joined ##c++
T 1389317291 23*	23w3pm has quit (23Quit: This computer has gone to sleep23)
T 1389317351 19*	19yayachiken (~yayachike@cl-5796.cgn-01.de.sixxs.net) has joined ##c++
T 1389317355 23*	23ambro718 has quit (23Quit: Konversation terminated!23)
T 1389317378 23*	23spobat has quit (23Ping timeout: 264 seconds23)
T 1389317636 19*	19hyperair (hyperair@ubuntu/member/hyperair) has joined ##c++
T 1389317638 19*	19zanoni (~quassel@187.2.153.214) has joined ##c++
T 1389317658 23*	23hz has quit (2323)
T 1389317714 23*	23tmh_ has quit (23Remote host closed the connection23)
T 1389317760 23*	23oeao has quit (23Ping timeout: 265 seconds23)
T 1389317765 19*	19jamesf (~user@jef.me.uk) has joined ##c++
T 1389317835 23*	23jamesf has quit (23Client Quit23)
T 1389317907 23*	23Raziel has quit (23Ping timeout: 245 seconds23)
T 1389318093 23*	23yayachiken has quit (23Read error: Connection reset by peer23)
T 1389318112 18<o-O-o>	see? streams are awesome
T 1389318124 19*	19yayachiken (~yayachike@cl-5796.cgn-01.de.sixxs.net) has joined ##c++
T 1389318155 23*	23yayachiken has quit (23Read error: Connection reset by peer23)
T 1389318181 19*	19kcj (~casey@unaffiliated/kcj) has joined ##c++
T 1389318185 19*	19yayachiken (~yayachike@cl-5796.cgn-01.de.sixxs.net) has joined ##c++
T 1389318234 23*	23amizraa has quit (23Remote host closed the connection23)
T 1389318256 18<kalven>	no
T 1389318334 19*	19amizraa (~amizraa@gateway/tor-sasl/amizraa) has joined ##c++
T 1389318335 23*	23yayachiken has quit (23Read error: Connection reset by peer23)
T 1389318362 19*	19yayachiken (~yayachike@cl-5796.cgn-01.de.sixxs.net) has joined ##c++
T 1389318394 23*	23yayachiken has quit (23Read error: Connection reset by peer23)
T 1389318413 23*	23xyzodiac has quit (23Quit: My MacBook Pro has gone to sleep. ZZZzzzâ€¦23)
T 1389318477 19*	19yayachiken (~yayachike@host-115-67.kawo1.rwth-aachen.de) has joined ##c++
T 1389318607 23*	23gaffa has quit (23Ping timeout: 245 seconds23)
T 1389318687 23*	23pajasso has quit (23Remote host closed the connection23)
T 1389318727 19*	19pajasso (~pajasso@173.252.71.189) has joined ##c++
T 1389318849 19*	19xyzodiac (~xyzodiac@ip70-171-22-24.ga.at.cox.net) has joined ##c++
T 1389318920 23*	23themagician has quit (2323)
T 1389318982 18<svm_invictvs>	WHat's the correct way to stringify a macro parameter?
T 1389319027 18<svm_invictvs>	Or is that not done portably?
T 1389319039 18<tgs3>	##
T 1389319095 18<kalven>	#
T 1389319121 18<svm_invictvs>	## or #?
T 1389319123 18<svm_invictvs>	WHich is it?
T 1389319124 18<tgs3>	http://stackoverflow.com/questions/16989730/c-stringify-how-does-it-work
T 1389319141 23*	23riotz has quit (23Remote host closed the connection23)
T 1389319231 19*	19riotz (riotz@gateway/shell/sh3lls.net/x-fcsvvutbthrfkxxh) has joined ##c++
T 1389319741 19*	19Goplat (~goplat@reactos/developer/Goplat) has joined ##c++
T 1389319829 23*	23pajasso has quit (23Remote host closed the connection23)
T 1389319850 23*	23dardevelin has quit (23Quit: Leaving23)
T 1389319870 19*	19Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
T 1389319936 23*	23Djinnei has quit (23Ping timeout: 252 seconds23)
T 1389320075 18<BlueProtoman>	How do you call one of a class' constructors within another of said class' constructors?
T 1389320096 23*	23mrevil has quit (23Remote host closed the connection23)
T 1389320127 23*	23P_R_Deltoid has quit (23Read error: Connection reset by peer23)
T 1389320267 19*	19froggey_ (~froggey@unaffiliated/froggey) has joined ##c++
T 1389320277 18<hyperair>	geordi: struct A { A() {BARK;} A(int) {BARk;} }; struct B { B() : A() {BARK;} B(int) : A(0) {BARK;} };
T 1389320279 18<geordi>	error: 'BARk' was not declared in this scope
T 1389320279 23*	23froggey has quit (23Disconnected by services23)
T 1389320283 19*	19armyriad (~armyriad@cpe-108-185-101-0.socal.res.rr.com) has joined ##c++
T 1389320284 22*	froggey_ is now known as froggey
T 1389320294 18<hyperair>	geordi: B b1, b2(1); struct A { A() {BARK;} A(int) {BARK;} }; struct B { B() : A() {BARK;} B(int) : A(0) {BARK;} };
T 1389320295 18<geordi>	error: 'B' does not name a type
T 1389320299 18<hyperair>	bleh
T 1389320337 18<hyperair>	geordi: struct A { A() {BARK;} A(int) {BARK;} }; struct B : A { B() : A() {BARK;} B(int) : A(0) {BARK;} }; int main() { B b1, b2(1); }
T 1389320338 18<geordi>	A::A() B::B() A::A(int) B::B(int)
T 1389320343 18<hyperair>	BlueProtoman: ^
T 1389320362 18<hyperair>	oh wait
T 1389320363 18<svm_invictvs>	Do statics in functions get initialized lazily?
T 1389320366 18<hyperair>	you wanted to chain constructors.
T 1389320369 18<BlueProtoman>	hyperair: Not concerned about inheritance, just constructors within the same class.
T 1389320371 18<hyperair>	hmm i wonder if that's implemented yet.
T 1389320383 18<svm_invictvs>	The meyers singleton...I believe
T 1389320390 18<hyperair>	struct A { A () {BARK; } A (int) : A() {BARK;} };
T 1389320399 18<hyperair>	geordi: -c struct A { A () {BARK; } A (int) : A() {BARK;} };
T 1389320399 18<geordi>	Success
T 1389320404 18<hyperair>	BlueProtoman: ^ like that
T 1389320407 19*	19tmh_ (~e@unaffiliated/tmh/x-0013998) has joined ##c++
T 1389320427 18<hyperair>	geordi: append int main() { A a = 1; }
T 1389320428 18<geordi>	Success
T 1389320434 18<hyperair>	geordi: remove -c
T 1389320435 18<geordi>	A::A() A::A(int)
T 1389320458 23*	23mdorenka has quit (23Read error: Operation timed out23)
T 1389320466 18<BlueProtoman>	hyperair: Ah, thank you.
T 1389320478 18<hyperair>	:)
T 1389320483 19*	19Carbonflux (~BOB@71-212-96-109.tukw.qwest.net) has joined ##c++
T 1389320563 23*	23Streusel has quit (23Quit: Computer has gone to sleep.23)
T 1389320566 19*	19pajasso (~pajasso@155.sub-70-197-1.myvzw.com) has joined ##c++
T 1389320588 23*	23tmh_ has quit (23Remote host closed the connection23)
T 1389320608 23*	23rkreis has quit (23Ping timeout: 245 seconds23)
T 1389320704 19*	19P_R_Deltoid (~P_R_Delto@2601:c:a500:c75:502d:e0dc:c058:e4ce) has joined ##c++
T 1389320705 23*	23Rudolf has quit (23Quit: [IRSSI]23)
T 1389320742 19*	19spobat (~spobat@unaffiliated/spobat) has joined ##c++
T 1389320843 19*	19spobat_ (~spobat@unaffiliated/spobat) has joined ##c++
T 1389320883 19*	19mdorenka (~mdorenka@unaffiliated/mdorenka) has joined ##c++
T 1389320908 23*	23rfk has quit (23Quit: leaving23)
T 1389320992 18<svm_invictvs>	Does C++ have a generic type that lets you define some code that will be execute at the close of scope?
T 1389320993 19*	19Streusel (~Anonymous@unaffiliated/streusel) has joined ##c++
T 1389321017 23*	23spobat has quit (23Ping timeout: 264 seconds23)
T 1389321078 18<SamB>	you mean some RAII thing to simulate "finally"?
T 1389321091 19*	19tmh_ (~e@unaffiliated/tmh/x-0013998) has joined ##c++
T 1389321095 18<SamB>	I don't think it has one *now*
T 1389321096 18<Stanley00>	svm_invictvs: sadly no, but you can define a finally class, that will execute you code at its destructor
T 1389321105 18<svm_invictvs>	They added "finally" to C++?
T 1389321109 18<SamB>	no
T 1389321116 18<svm_invictvs>	Oh, finally clase
T 1389321119 18<svm_invictvs>	*class
T 1389321119 18<YOURBESTFRIEND>	man, does C++ have delegates?
T 1389321123 18<svm_invictvs>	I read that as "finally clause"
T 1389321124 23*	23spobat_ has quit (23Ping timeout: 264 seconds23)
T 1389321124 18<SamB>	such a template is not a bad idea
T 1389321131 23*	23ithecourier has quit (23Ping timeout: 246 seconds23)
T 1389321162 23*	23pajasso has quit (23Remote host closed the connection23)
T 1389321207 23*	23kevr has quit (23Ping timeout: 240 seconds23)
T 1389321211 18<svm_invictvs>	template<typename Funct>std::finally { FuncT func;  finally(FuncT _func) : func(_func) {} ~finally { func() } };
T 1389321234 19*	19pajasso (~pajasso@173.252.71.189) has joined ##c++
T 1389321246 18<kalven>	YOURBESTFRIEND: like std::function or something multicast?
T 1389321261 18<Taggnostr2>	if I have a function that returns a set<int>, and I do set<int> foo, bar; foo = bar = func(); will I get two separate copies of the set in foo and bar?
T 1389321287 18<SamB>	so you'd just write "finally([](){ /* clean up */ });" ?
T 1389321352 18<kalven>	Taggnostr2: yes
T 1389321367 18<Taggnostr2>	kalven, thanks
T 1389321443 23*	23tz has quit (23Quit: Someone hacked the Gibson :(23)
T 1389335999 22*	Disconnected (Remote host closed socket).
T 1389336010 19*	19Now talking on ##c++
T 1389336010 29*	29Topic for ##c++ 29is: ##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389336010 29*	29Topic for ##c++ 29set by PlasmaHH!~plasmahh@213.61.9.75 29at Mon Jan  6 04:26:13 2014
T 1389336010 18<***>	Buffer Playback...
T 1389336010 18<svm_invictvs>	[19:49:11] Yep
T 1389336010 18<svm_invictvs>	[19:49:13] And operator=
T 1389336010 18<svm_invictvs>	[20:06:54] goor lord, the implemenation of std::tuple makes my head spin
T 1389336010 18<moonchild>	[20:07:05] hehe
T 1389336010 18<moonchild>	[20:07:14] it just inherits from itself
T 1389336010 18<svm_invictvs>	[20:07:16] I'm trying to understand it.
T 1389336010 18<svm_invictvs>	[20:07:17] yeah
T 1389336010 18<svm_invictvs>	[20:07:39] And "indexing" it is just casting it to the n'th type you want.
T 1389336010 18<moonchild>	[20:07:59] think of it like a list in lisp... you have the head item & the rest of the list
T 1389336010 18<svm_invictvs>	[20:08:45] yeah
T 1389336010 18<svm_invictvs>	[20:08:56] And to iterate your'e recursively calling it with the next element right?
T 1389336010 18<svm_invictvs>	[20:09:03] (in lisp at least)
T 1389336010 18<moonchild>	[20:09:25] its very similar
T 1389336010 18<moonchild>	[20:09:47] you've got head() and rest()
T 1389336010 18<moonchild>	[20:10:17] to get to the 2nd item, you'd do a head(rest(tuple))
T 1389336010 18<moonchild>	[20:10:41] or 3rd would be head(rest(rest(tuple)))
T 1389336010 18<kalven>	[20:10:52] caaaadr
T 1389336010 18<moonchild>	[20:11:26] i always liked cadadar... sounds like you're playing with dead things :P
T 1389336010 18<kalven>	[20:11:34] or cadddr.. whatever, screw lisp
T 1389336010 18<moonchild>	[20:13:13] svm_invictvs: in lisp 'car' and 'cdr' give you the head & rest for a list... there's a short-hand, where you just use c-[a or d]*-r to get to the right spot
T 1389336010 18<lru>	[20:36:32] is this safe:  std::map<blah>::iterator b = m.begin(); m.erase(b); ++b;
T 1389336010 18<kalven>	[20:37:37] no
T 1389336010 18<kalven>	[20:37:50] but m.erase(b++); is
T 1389336010 18<lru>	[20:38:20] so if I changed the ++b; to b++; that's ok?
T 1389336010 18<kalven>	[20:38:25] no
T 1389336010 18<lru>	[20:38:55] ahh, because a copy of b is passed to erase
T 1389336010 18<moonchild>	[20:39:13] its the order of eval
T 1389336010 18<kalven>	[20:39:18] yes, a copy of the original value, no less.
T 1389336010 18<lru>	[20:39:48] thanks!
T 1389336010 18<lru>	[20:42:00] so the function call to erase() happens after the ++
T 1389336010 18<ville>	[20:54:15] yes it's after but the value post increment operator in general is expected to return is the original non-incremented value
T 1389336010 18<edoceo`>	[21:09:28] lru, kalven, ville: jftr; `std::map<blah>::iterator b = m.begin (); b = m.erase (b);`  is equivalent to what was posted earlier
T 1389336010 18<kalven>	[21:10:39] edoceo`: yes, but much more obvious to the reader.. think about job security
T 1389336010 18<edoceo`>	[21:11:39] kalven: more obvious doing `m.erase (b++)` than `b = m.erase (b)`? certainly depends on whom you are asking
T 1389336010 18<kalven>	[21:12:07] edoceo`: I'm saying b = m.erase(b) is more readable.
T 1389336010 18<edoceo`>	[21:13:22] ah, if that case I agree with you, I thought you said that `m.erase (b++);` was more obvious
T 1389336010 18<edoceo`>	[21:14:17] 06:14am, time for a smoke.
T 1389336010 18<lru>	[21:14:51] is that new in c++11?  according to docs I read, erase() returns the number of items erased, or void
T 1389336010 18<kalven>	[21:15:30] that form used to return void
T 1389336010 18<ville>	[21:28:54] ...and if I recall libstdc++ was/is late to implement it
T 1389336010 18<pwned>	[21:43:28] my commodore had more hz than that
T 1389336010 18<pwned>	[21:43:41] omg time lapse of 5 hours
T 1389336010 18<pwned>	[21:45:59] const version of map::at is the best thing in c++11
T 1389336010 18<ville>	[21:51:44] you seem to settle for little
T 1389336010 18<V-ille>	[22:11:51] ville: sdt said " I gave the other Ville access to change the access list and such. I  can't change the foundership, looks like only LIM (or probably a  freenode admin) can do that. I suggest you guys ask an admin for that,  and pull me in if needed. I am listed as the "successor" for the  channel, which should help convince them, "
T 1389336010 18<ville>	[22:14:51] yeah i fixed the entry message already
T 1389336010 18<V-ille>	[22:18:25] anything else you need?
T 1389336010 18<ville>	[22:19:07] no. think we're set.
T 1389336010 18<V-ille>	[22:21:04] that wasn't so hard :)
T 1389336010 18<Kevin-_->	[22:35:54] I know I'm probably gonna get !offtopic'd for this, but anyone know if cachegrind/cg_annotate works for c++ files?  I can't seem to get it to work
T 1389336010 18<***>	Playback Complete.
T 1389336012 19*	19Griwes|phone__ (~Griwes@unaffiliated/griwes) has joined ##c++
T 1389336110 19*	19untitled (untitled@unaffiliated/untitled) has joined ##c++
T 1389336145 23*	23Griwes|phone_ has quit (23Ping timeout: 246 seconds23)
T 1389336173 18<Technicus>	How do I compute maths with integers and save the result to a float?
T 1389336198 19*	19vishesh (~vishesh@122.177.176.76) has joined ##c++
T 1389336204 18<untitled>	Hey. What would be the simplest way of taking a hash from a string to identify it?
T 1389336233 23*	23Griwes|phone has quit (23Ping timeout: 272 seconds23)
T 1389336245 18<Stanley00>	Technicus: casting?
T 1389336254 23*	23introom has quit (23Ping timeout: 272 seconds23)
T 1389336263 18<untitled>	For example we have 5 parameters (coordinates/strings), that we want to identify by some hash string
T 1389336290 23*	23Griwes|phone__ has quit (23Ping timeout: 252 seconds23)
T 1389336294 18<Stanley00>	untitled: use hash function of c++11?
T 1389336320 18<untitled>	Stanley00: not using 11 yet
T 1389336338 18<Stanley00>	untitled: how about boost?
T 1389336352 18<untitled>	Stanley00: not using it either :)
T 1389336375 23*	23maciuszek has quit (23Ping timeout: 260 seconds23)
T 1389336403 23*	23Gluesticky has quit (23Quit: This is the end. Goodbye cruel world!23)
T 1389336522 18<Technicus>	Stanley00: I am having trouble with that, I'm getting negative numbers.
T 1389336556 18<pwned>	untitled: if cryptographic security doesn't matter, you could get a few primes and do it yourself
T 1389336590 18<Latexi95>	Technicus: integer overflow?
T 1389336603 23*	23BlaXpirit has quit (23Quit: Quit Konversation23)
T 1389336605 23*	23JamesWine has quit (23Ping timeout: 252 seconds23)
T 1389336648 18<Technicus>	Latexi95: Here is the code: < http://www.fpaste.org/67259/36609138/ >.
T 1389336703 18<untitled>	pwned: yep, I think I'm going to do that
T 1389336755 18<o]>	die boost die
T 1389336804 18<Technicus>	Latexi95: that code is not accurate, it's more like this: < http://www.fpaste.org/67260/36785138/ >.
T 1389336882 18<Stanley00>	Technicus: thermalArray was not initialized?
T 1389336900 18<Technicus>	Stanley00: here is the output: < http://www.fpaste.org/67261/13893368/ >.
T 1389336923 23*	23griotspeak has quit (23Quit: Computer has gone to sleep.23)
T 1389336981 18<Technicus>	Yes it is.
T 1389336993 19*	19Ge (~Ge@unaffiliated/ge) has joined ##c++
T 1389336998 Tcl interface unloaded
T 1389336998 Python interface unloaded
T 1389337013 -10-11>	You are now talking on 11##c++
T 1389337013 -10-11-	Topic for 11##c++ is 11##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389337013 -10-11-	Topic for 11##c++ set by 11PlasmaHH!~plasmahh@213.61.9.75 at 11Mon Jan  6 04:26:13 2014
T 1389337014 -10-11>	Griwes|phone 14(10~Griwes@unaffiliated/griwes14) has joined ##c++
T 1389337058 2<Technicus2>	I am trying to take the integer input from between 55 to 85 and get a proportional value from between 0 and 1.
T 1389337093 2<Stanley002>	Technicus: I saw 4 cout, and your output has 8 values?
T 1389337106 <10-11-	kerrick has quit 14(Ping timeout: 245 seconds14)
T 1389337127 <10-11-	Betal has quit 14(Remote host closed the connection14)
T 1389337186 25Â»19Â»	19Now talking on ##c++
T 1389337186 29Â»22Â»	22Topic for ##c++ is: ##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389337186 29Â»22Â»	22Topic for ##c++ set by PlasmaHH!~plasmahh@213.61.9.75 at Mon Jan  6 04:26:13 2014
T 1389337249 31-25-19-19Â»	19fluter (~fluter@fedora/fluter19) has Joined ##c++
T 1389337250 26Â«18-11-31-	26Bloodust (~Bloodust@tinodidriksen.com26) has Quit (Ping timeout: 264 seconds26)
T 1389337258 28.:1924Technicus28:.	Stanley00: < http://www.fpaste.org/67262/38933724/ >.
T 1389337267 26Â«18-11-31-	26fluter (~fluter@fedora/fluter26) has Quit (Max SendQ exceeded26)
T 1389337276 26Â«18-11-31-	26partycoder (~textual@unaffiliated/partycoder26) has Quit (Quit: Textual IRC Client: www.textualapp.com26)
T 1389337313 31-25-19-19Â»	19fluter (~fluter@fedora/fluter19) has Joined ##c++
T 1389337332 25Â»19Â»	19Now talking on ##c++
T 1389337332 29Â»22Â»	22Topic for ##c++ is: ##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389337332 29Â»22Â»	22Topic for ##c++ set by PlasmaHH!~plasmahh@213.61.9.75 at Mon Jan  6 04:26:13 2014
T 1389337371 25Â»19Â»	19Now talking on ##c++
T 1389337371 29Â»22Â»	22Topic for ##c++ is: ##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389337371 29Â»22Â»	22Topic for ##c++ set by PlasmaHH!~plasmahh@213.61.9.75 at Mon Jan  6 04:26:13 2014
T 1389337413 26Â«18-11-31-	26V-ille (~ville@gprs-internet-bcee24-139.dhcp.inet.fi26) has Quit (Quit: Leaving.26)
T 1389337415 25Â»19Â»	19Now talking on ##c++
T 1389337415 29Â»22Â»	22Topic for ##c++ is: ##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389337415 29Â»22Â»	22Topic for ##c++ set by PlasmaHH!~plasmahh@213.61.9.75 at Mon Jan  6 04:26:13 2014
T 1389337729 25Â»19Â»	19Now talking on ##c++
T 1389337729 29Â»22Â»	22Topic for ##c++ is: ##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389337729 29Â»22Â»	22Topic for ##c++ set by PlasmaHH!~plasmahh@213.61.9.75 at Mon Jan  6 04:26:13 2014
T 1389337782 25Â»19Â»	19Now talking on ##c++
T 1389337782 29Â»22Â»	22Topic for ##c++ is: ##c++ is a topical channel for discussing standard C++ specifications and code. || pastes: http://ideone.com || reference: http://cppreference.com || current standard: ISO/IEC 14882:2011 (C++11) || http://www.parashift.com/c++-faq-lite/
T 1389337782 29Â»22Â»	22Topic for ##c++ set by PlasmaHH!~plasmahh@213.61.9.75 at Mon Jan  6 04:26:13 2014
